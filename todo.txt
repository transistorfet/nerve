
* implement symbolic link style redirect
* the file controller doesn't properly return an error message when a file isn't found, since it doesn't throw an exception

* make references more regular (by using / instead of . as the separator)
* should there be a way to list subdevices, or subobjects of some kind? like the ls command
* maybe add a mechanism like in codeigniter (don't know how it works) where the controller specifies which asset files are needed (js/css/etc)
  You could then put the asset files in the module directories somehow so that everything is kept together (and also the header code would be autogenerated)
* unify the namespace in some way, with the modules and everything...

* fix the whole global functions thing... there should be a more generic way of calling functions on Main
* resolve the issue of config_info, and whether you call it once or call it all the time... whether you have to do it for each object individually, or if you can make
  that function recursive
* should you have a means of registering types (server, device, controller)?  You'd kind of have to import all the right modules first, and have them register
  you could maybe even add them automatically, by searching through every module to see if there are any classes of type Controller, Server, or Device

* modify rgbnode to always return data, so the delay doesn't happen, or else have some way of telling the device to not wait (which kinda breaks device agnosticism...)

* you need a way to have a header and footer for html, possible the idea of a template... or perhaps the header and footer can be generated on
  the fly... possibly even part of the themeing system, so what gets sent back has all the theme specific info, as well as the stuff needed for the specific page
* make more advanced widgets for various things (ideas?)
* possibly have more specific widgets like one for a player, etc
* you could have a remote control app where you can configure which widgets or blocks of widgets should appear (kind of like how it used to be
  in the android app).  You could have a 'customize' mode where it shows a button to remove widgets/panels, or add them using a list

* add a redirect function or something to controller, for example /config/ (which calls index()) redirects to /config/view
  You've already sort of implemented a RedirectException...
* you need a better way for controllers to return or control error message returns...
* make it possible to do multiple queries at once, particularly with http, so that all data fetches on an html page can be updated at once

* make ajax requests stop when the window isn't visible

* add a theme system
* add a user system.  Users can have their own themes, remote control layouts, and so on

* android app: see if you can't get rid of the help text under the preferences (it's not needed and most things don't have them), but could you put the
  current value in there even??
* change the theme of the preferences to be the dark android theme
* try to move settings button/action bar into bottom bar, or something... maybe you can make it hide itself

* add fetching of remote uris during a query... so that local and remote data points can be accessed through the same mechanism
* make all threads use the same method of invocation, if possible
* perhaps you could make it so that servers can be individually stopped and started

* make it as much like a generic hmi/plc/data disemination/control thing as possible.  Make it so that it's easy to have it automatically
  query the server to fill in data fields.
* make it easy to datalog certain points/tags/whatever i should call them.  You should be able to log to a database of some kind... perhaps
  you'll have a common database for all datalogging, or maybe you'll have an individual one for each set of data to be logged...
  (I'm thinking of logging temperature here, and then displaying a graph somehow, or calculating trends based on the data)

* the server response could be the server name (cr, lr) which can then be used as the default namespace for the xml layouts

* get vlc scrobbling working
* when vlc plays a youtube link, it converts the link to the direct link to the flv, but that link expires, and causes an error when played
* with vlc, is there a way to not receive the json when sending a command (to speed up commands)

STRUCTURAL:

POSSIBLE FEATURES:
    * you could add an auto discovery feature where the phone sends a broadcast message to the default port number and all the
      servers respond.  It could be used for some normal operations even, and the server would just send a message back like
      it normally would, in response to the request.  It could also be for config though, to know what servers are around
    * you could add a mechanism for registering for 'push notifications' by something like rgb.* <- wildcard so that all rgb
      messages would be automatically sent to that endpoint

    * make it possible to paste a link (youtube video or playlist link) to play the link on the server end of things
    * add voice commands somehow, possibly through android or google web api

